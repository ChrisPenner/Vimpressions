#! /bin/sh
data_folder="$HOME/.vimtips" 
data="$data_folder/data" 
temp="$data_folder/temp"
temp2="$data_folder/temp2"
tips="$data_folder/tips"
active_tips="$data_folder/activetips"

# Get values
# Find current day as integer
let current_day=`date +%s`/86400
last_day=`grep last_day $data | sed 's/[^[:space:]]* //'`
current_tip=`grep current_tip $data | sed 's/[^[:space:]]* //'`
day_delta=`expr $current_day - $last_day`
num_tips=`grep num_tips $data | sed 's/[^[:space:]]* //'`
hide=`grep hide $data | sed 's/[^[:space:]]* //'`

set_value()
{
    sed -i '' "s/$1.*/$1: $2/" $data
}

clean_numbers()
{
    # Wipe everything except commas and spaces (delimiters)
    num=`tr -c -s '[0-9]' ' ' <<<"$@"`

    # Change commas and spaces to newlines
    num=`tr -s ' ,' '\n' <<< "$@"`
    echo $num
}

add_number()
{
    n="$1"
    # Add item to active tips ONLY if it's not already there.
    if ! grep -q "\[$n\]" $active_tips; then
        sed -n "/\[$n\]/ p" $tips >> $active_tips
        sed -n "/\[$n\]/,/\[/ {/^ /p;}" $tips >> $active_tips
        return 0
    else
        return 1
    fi
}

case "$1" in
    'hide')
        # Set 'hide' option
        set_value "hide" "true"
        echo "Consider it done."
        exit
        ;;

    'show')
        set_value "hide" "false"
        echo "Consider it done."
        exit
        ;;

    'clear')
        shift
        num=`clean_numbers $@`
        for n in $num; do
            # Sed magic: clear line continuations following [n],
            sed -i '' "/\[$n\]/,/\[/ {/^\[/ !d;}" "$active_tips"
            # Then clear [n] line itself.
            sed -i '' "/\[$n\]/ d" "$active_tips"
            echo "[$n] Cleared!"
        done
        exit
        ;;

    'add')
        shift
        num=`clean_numbers $@`
        for n in $num; do
            if ! grep -q "\[$n\]" $tips; then
                echo "Can't find any tip [$n]!"
            else
                if add_number $n; then
                    echo "Added [$n]."
                else
                    echo "[$n] Already exists"
                fi
            fi
        done
        exit
        ;;

    'numtips')
        shift
        # clean, then only take first value.
        num=`clean_numbers $@ | sed 's/\([[:digit:]]\+\).*/\1/'`

        # Update setting
        set_value "num_tips" $num
        echo "Now showing max $num tips"
        exit
        ;;

    'next')
        current_tip=`expr $current_tip + 1`

        # Update current item.
        set_value 'current_tip' $current_tip
        add_number "$current_tip"
        ;;

    *)
        # Print header?
        if [ ! $1 ]; then
            if [ ! $hide = 'true' ]; then
                echo "== Vimtips == ('vimtips help' for help)"
            fi
        # If unrecognized args, print usage.
        else
            echo "usage:
            'vimtips next' - adds new tip
            'vimtips clear <x> <y> <z>...' clears tip numbers x, y, and z from list
            'vimtips numtips <n>' shows only <n> tips from now on."
            exit
        fi
        ;;

    esac

    if [ $day_delta -gt 0 ]; then
        current_tip=`expr $current_tip + 1`

        # Update current item.
        set_value 'current_tip' $current_tip

        add_number $current_tip
    fi

    # Update last_day
    sed -i '' "s/last_day.*/last_day: $current_day/" $data
    set_value 'last_day' $current_day

    echo '' > $temp
    echo '' > $temp2
    # Remove tips until under limit
    while [ `grep '\[.*\]' $active_tips | wc -l` -ge $num_tips ]; do
        head -n 1 $active_tips > $temp
        tail -n +2 $active_tips > $temp2
        cat $temp2 > $active_tips
    done
    cat $active_tips >> $temp
    cat $temp | sed '/^$/d' > $active_tips
    rm -f "$data_folder/temp*"

    # Finally, print out active tips.
    cat $active_tips
